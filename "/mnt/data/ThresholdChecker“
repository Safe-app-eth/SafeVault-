from pathlib import Path
from zipfile import ZipFile

# Setup: Dynamic Threshold Checker module
base_path = Path("/mnt/data/SafeVault-ThresholdChecker")
scripts_path = base_path / "scripts"
workflows_path = base_path / ".github" / "workflows"
scripts_path.mkdir(parents=True, exist_ok=True)
workflows_path.mkdir(parents=True, exist_ok=True)

# GitHub Action Workflow
workflow = """
name: 🧮 Dynamic Threshold Checker

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  check-threshold:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install ethers@5 node-fetch@2

      - name: Log Safe Threshold
        env:
          SAFE_ADDRESS: ${{ secrets.SAFE_ADDRESS }}
          SAFE_RPC_URL: ${{ secrets.SAFE_RPC_URL }}
        run: node scripts/checkThreshold.js
"""

(workflows_path / "threshold-check.yml").write_text(workflow.strip())

# Threshold Checker Script
script = """
const { ethers } = require("ethers");

const rpcUrl = process.env.SAFE_RPC_URL;
const safeAddress = process.env.SAFE_ADDRESS;

const SAFE_ABI = [
  "function getThreshold() view returns (uint256)",
  "function getOwners() view returns (address[])"
];

(async () => {
  try {
    const provider = new ethers.providers.JsonRpcProvider(rpcUrl);
    const contract = new ethers.Contract(safeAddress, SAFE_ABI, provider);

    const threshold = await contract.getThreshold();
    const owners = await contract.getOwners();

    console.log("🔐 Safe Info");
    console.log("👥 Owners:", owners);
    console.log("🛡 Threshold:", threshold);
  } catch (error) {
    console.error("❌ Error reading Safe data:", error.message);
  }
})();
"""

(scripts_path / "checkThreshold.js").write_text(script.strip())

# README
readme = """
# 🧮 Dynamic Safe Threshold Checker

## 🧠 What It Does:
- Reads your Safe's threshold and owners
- Logs it to GitHub Actions console
- Runs every hour (or manually)

## 🔐 Required GitHub Secrets:
- `SAFE_ADDRESS`
- `SAFE_RPC_URL`

## 📦 Output:
- Owners list
- Current threshold
- Use it to sync GitHub roles or Discord roles later
"""

(base_path / "README.md").write_text(readme.strip())

# Create zip
zip_file = Path("/mnt/data/SafeVault-ThresholdChecker.zip")
with ZipFile(zip_file, "w") as zipf:
    for file in base_path.rglob("*"):
        if file.is_file():
            zipf.write(file, file.relative_to(base_path))

zip_file.name
