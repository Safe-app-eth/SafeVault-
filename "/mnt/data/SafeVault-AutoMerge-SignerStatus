# GitHub workflow
workflow = """
name: ✅ Auto Merge on Safe Sign + Signer Status Tracker

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  check-signer-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm install node-fetch@2

      - name: Check signer status and merge
        env:
          SAFE_ADDRESS: ${{ secrets.SAFE_ADDRESS }}
          REOWN_API_KEY: ${{ secrets.REOWN_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/autoMergeIfThresholdMet.js
"""

(workflows_path / "auto-merge-signers.yml").write_text(workflow.strip())

# Script: autoMergeIfThresholdMet.js
script = """
const fetch = require("node-fetch");

const safeAddress = process.env.SAFE_ADDRESS;
const apiKey = process.env.REOWN_API_KEY;
const githubToken = process.env.GITHUB_TOKEN;

// Dummy PR mapping (replace this with actual logic from comment/proposal)
const mockPullRequest = {
  number: 1,
  repo: "SafeVault-",
  owner: "Safe-app-eth",
  threshold: 2
};

(async () => {
  try {
    const txs = await fetch(`https://api.reown.com/safe/transactions?address=${safeAddress}`, {
      headers: { Authorization: `Bearer ${apiKey}` }
    }).then(res => res.json());

    const latest = txs[0];
    if (!latest) throw new Error("No transactions found.");

    const approvals = latest.confirmations.length;
    const txHash = latest.safeTxHash;

    if (approvals >= mockPullRequest.threshold) {
      console.log(`✅ Safe threshold met. Approvals: ${approvals}`);

      const mergeRes = await fetch(`https://api.github.com/repos/${mockPullRequest.owner}/${mockPullRequest.repo}/pulls/${mockPullRequest.number}/merge`, {
        method: "PUT",
        headers: {
          Authorization: `Bearer ${githubToken}`,
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ merge_method: "squash", commit_title: "🔐 Safe proposal approved, PR auto-merged" })
      });

      if (mergeRes.ok) {
        console.log("✅ PR successfully merged.");
      } else {
        const text = await mergeRes.text();
        console.error("❌ Merge failed:", text);
      }
    } else {
      console.log(`🕒 Approvals (${approvals}) not enough for threshold (${mockPullRequest.threshold})`);
    }
  } catch (err) {
    console.error("❌ Error:", err.message);
  }
})();
"""

(scripts_path / "autoMergeIfThresholdMet.js").write_text(script.strip())

# README
readme = """
# ✅ SafeVault Auto-Merge + Signer Status

## 🔁 Features:
- Checks every 10 minutes if a Safe tx meets threshold
- If signed by enough owners, auto-merges associated PR
- GitHub + Safe status integrated

## 🚀 Usage:
- Connect proposals to PRs via labels or IDs (manual for now)
- Script will pull latest tx, check confirmations
- If meets threshold, merges related PR

## 🔐 Secrets Required:
- SAFE_ADDRESS
- REOWN_API_KEY
- GITHUB_TOKEN
"""
