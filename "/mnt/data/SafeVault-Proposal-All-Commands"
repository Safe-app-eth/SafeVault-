# Prepare next drop: Unified GitHub Actions + All Comment Types
base_path = Path("/mnt/data/SafeVault-Proposal-All-Commands")
scripts_path = base_path / "scripts"
workflows_path = base_path / ".github" / "workflows"
scripts_path.mkdir(parents=True, exist_ok=True)
workflows_path.mkdir(parents=True, exist_ok=True)

# Unified GitHub workflow
workflow = """
name: üí¨ SafeVault Unified Comment Handler

on:
  issue_comment:
    types: [created]

jobs:
  handle-comment:
    if: contains(github.event.comment.body, '/propose-')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install node-fetch@2 ethers@5

      - name: Dispatch command
        env:
          SAFE_ADDRESS: ${{ secrets.SAFE_ADDRESS }}
          SAFE_RPC_URL: ${{ secrets.SAFE_RPC_URL }}
          REOWN_API_KEY: ${{ secrets.REOWN_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_URL: ${{ github.event.comment.url }}
        run: node scripts/dispatchComment.js
"""

(workflows_path / "safevault-comment-handler.yml").write_text(workflow.strip())

# Dispatcher script
dispatcher = """
const { execSync } = require("child_process");

const body = process.env.COMMENT_BODY;

if (body.startsWith("/propose-eth")) {
  execSync("node scripts/proposeETHTransfer.js", { stdio: "inherit" });
} else if (body.startsWith("/propose-token")) {
  execSync("node scripts/proposeCustomToken.js", { stdio: "inherit" });
} else {
  console.log("üîï No matching handler.");
}
"""

(scripts_path / "dispatchComment.js").write_text(dispatcher.strip())

# Copy over previous ETH and custom token scripts
eth_script_path = Path("/mnt/data/SafeVault-ETH-Transfer-Proposal/scripts/proposeETHTransfer.js")
token_script_path = Path("/mnt/data/SafeVault-Custom-Token-Proposal/scripts/proposeCustomToken.js")
(scripts_path / "proposeETHTransfer.js").write_text(eth_script_path.read_text())
(scripts_path / "proposeCustomToken.js").write_text(token_script_path.read_text())

# README
readme = """
# üß† SafeVault Comment Automation (ETH + Custom Token)

## ‚úÖ Supported Commands:
/propose-eth 0xRecipient 1.0  
/propose-token 0xToken 0xRecipient 500

## üíº Uses:
- Reown API for Safe proposals
- GitHub comments as triggers
- Posts confirmation as comment reply

## üìÅ Files:
- .github/workflows/safevault-comment-handler.yml
- scripts/dispatchComment.js
- scripts/proposeETHTransfer.js
- scripts/proposeCustomToken.js

## üîê Secrets Required:
- SAFE_ADDRESS
- SAFE_RPC_URL
- REOWN_API_KEY
- GITHUB_TOKEN
"""
