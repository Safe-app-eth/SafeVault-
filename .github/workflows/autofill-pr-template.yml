on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  autofill:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: üßæ Get short commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: üß† Determine PR type from branch
        id: prtype
        run: |
          branch="${{ github.head_ref }}"
          type="üì¶ Unknown"

          if [[ "$branch" == feature/* ]]; then type="‚ú® Feature"
          elif [[ "$branch" == bugfix/* || "$branch" == fix/* ]]; then type="üêõ Bug Fix"
          elif [[ "$branch" == refactor/* ]]; then type="üõ† Refactor"
          elif [[ "$branch" == docs/* ]]; then type="üìÑ Documentation"
          elif [[ "$branch" == ci/* ]]; then type="‚öôÔ∏è CI/CD"
          fi

          echo "type=$type" >> $GITHUB_OUTPUT

      - name: üñä Autofill PR body
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const commitHash = '${{ steps.commit.outputs.hash }}';
            const prType = '${{ steps.prtype.outputs.type }}';
            const vercelLink = "https://safe-vault-f44t.vercel.app";

            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            let body = pr.body || "";

            body = body
              .replace("<!-- AUTOFILL:commit_hash -->", commitHash)
              .replace("<!-- AUTOFILL:vercel_preview_url -->", vercelLink)
              .replace("<!-- AUTOFILL:pr_type -->", prType);

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body
            });

      - name: üè∑ Auto-label PR
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ steps.prtype.outputs.type }}