from pathlib import Path
from zipfile import ZipFile

# Setup: Safe Proposal Markdown History Logger
base_path = Path("/mnt/data/SafeVault-ProposalHistory")
scripts_path = base_path / "scripts"
workflows_path = base_path / ".github" / "workflows"
scripts_path.mkdir(parents=True, exist_ok=True)
workflows_path.mkdir(parents=True, exist_ok=True)

# GitHub workflow
workflow = """
name: üìú Log Safe Proposals to History File

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  update-history:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install node-fetch@2

      - name: Run history logger
        env:
          SAFE_ADDRESS: ${{ secrets.SAFE_ADDRESS }}
          REOWN_API_KEY: ${{ secrets.REOWN_API_KEY }}
        run: node scripts/logProposalHistory.js

      - name: Commit history file
        run: |
          git config --global user.email "bot@safe.com"
          git config --global user.name "SafeVault Logger Bot"
          git add safe-proposal-history.md || true
          git commit -m "üìú Update Safe proposal history" || echo "No changes"
          git push || echo "No push needed"
"""

(workflows_path / "log-proposals.yml").write_text(workflow.strip())

# Logger script
logger = """
const fetch = require("node-fetch");
const fs = require("fs");

const apiKey = process.env.REOWN_API_KEY;
const safeAddress = process.env.SAFE_ADDRESS;

(async () => {
  try {
    const res = await fetch(\`https://api.reown.com/safe/transactions?address=\${safeAddress}\`, {
      headers: { Authorization: \`Bearer \${apiKey}\` }
    });
    const txs = await res.json();

    let output = "# üßæ Safe Proposal History\\n\\n";
    for (const tx of txs.slice(0, 10)) {
      const date = new Date(tx.createdAt).toLocaleString();
      output += \`- \${date}: \${tx.description} (Status: \${tx.status})\\n\`;
    }

    fs.writeFileSync("safe-proposal-history.md", output);
    console.log("‚úÖ History updated");
  } catch (e) {
    console.error("‚ùå Error logging history:", e.message);
  }
})();
"""

(scripts_path / "logProposalHistory.js").write_text(logger.strip())

# README
readme = """
# üìú Safe Proposal Markdown Logger

## What It Does:
- Pulls latest Safe proposals from Reown
- Logs them to `safe-proposal-history.md`
- Auto-commits file every 15 mins

## GitHub Secrets:
- `SAFE_ADDRESS`
- `REOWN_API_KEY`

## Output Example:
- 2025-07-24 15:04: Send 0.1 ETH to 0xABC‚Ä¶ (Status: pending)
"""

(base_path / "README.md").write_text(readme.strip())

# Create zip file
zip_file = Path("/mnt/data/SafeVault-ProposalHistory.zip")
with ZipFile(zip_file, "w") as zipf:
    for file in base_path.rglob("*"):
        if file.is_file():
            zipf.write(file, file.relative_to(base_path))

zip_file.name
